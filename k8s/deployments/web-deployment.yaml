apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: web
  name: web
  namespace: newsgac
spec:
  replicas: 1
  selector:
    matchLabels:
      name: web
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: web
        external-ingress: enabled
        name: web
    spec:
      containers:
      - args:
        - python
        - newsgac/app.py
        env:
        - name: CELERY_EAGER
          value: "False"
        - name: FLASK_APP
          value: newsgac.app
        - name: FLASK_DEBUG
          value: "1"
        - name: FLASK_ENV
          value: development
        - name: FLASK_SECRET_KEY
          value: newsgacdev123
        - name: FROG_HOSTNAME
          value: frog
        - name: FROG_PORT
          value: "12345"
        - name: MONGO_HOST
          value: database
        - name: MONGO_PORT
          value: "27017"
        - name: N_CROSS_VAL_JOBS
          value: "1"
        - name: N_PARALLEL_JOBS
          value: "1"
        - name: PYTHONPATH
          value: /newsgac
        - name: REDIS_HOST
          value: redis
        - name: REDIS_PORT
          value: "6379"
        image: registry.diginfra.net/newsgac
        resources:
          limits:
            cpu: 200m
            memory: 750Mi
          requests:
            cpu: 200m
            memory: 750Mi
        name: web
        ports:
        - containerPort: 5050
        volumeMounts:
        - mountPath: /newsgac/newsgac
          name: newsgac-claim0
      restartPolicy: Always
      volumes:
      - name: newsgac-claim0
        persistentVolumeClaim:
          claimName: newsgac-claim0
